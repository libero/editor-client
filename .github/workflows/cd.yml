name: Continuous Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - master

jobs:
  cd:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Setup
        run: |
          npm install
        env:
          CI: true
      - name: Build
        run: |
          npm run build
        env:
          CI: true
      - name: Lint
        run: |
          npm run lint:ci
        env:
          CI: true
      - name: Test
        run: |
          npm run test:ci
        env:
          CI: true
      - name: Docker build
        run: |
          docker build -f ./Dockerfile.playwright . -t editor-client
      - name: Install operating system dependencies
        run: |
          npx playwright install
          npx playwright install-deps
      - name: Browser Test
        run: |
          docker run --name editor-client -p 3000:3000 -it -d --rm editor-client
          ./.scripts/docker/wait-healthy.sh editor-client 120
          npm run playwright
          docker stop editor-client
        env:
          CI: true
          LANGUAGE: en_GB
      - name: Publish as 'unstable'
        if: github.repository_owner == 'libero' && github.ref == 'refs/heads/master'
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker build --no-cache -t $DOCKER_USERNAME/$REPO_NAME:unstable .
          docker push $DOCKER_USERNAME/$REPO_NAME:unstable
          .scripts/github/retag-and-push.sh $REPO_NAME unstable
        env:
          REPO_NAME: ${{ github.event.repository.name }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: Publish as 'stable'
        if: github.repository_owner == 'libero' &&  contains(github.ref, 'refs/tags/v')
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker build --no-cache -t $DOCKER_USERNAME/$REPO_NAME:stable .
          docker push $DOCKER_USERNAME/$REPO_NAME:stable
          .scripts/github/retag-and-push.sh $REPO_NAME stable
        env:
          REPO_NAME: ${{ github.event.repository.name }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: Archive BrowserTest screenshots
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: playwright-output
          path: test-results
